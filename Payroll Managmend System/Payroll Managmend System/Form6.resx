<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RAREQEREBERAREQEREBERAREQEREH//Z
</value>
  </data>
</root>